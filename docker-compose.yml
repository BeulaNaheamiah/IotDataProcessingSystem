# docker-compose.yml
version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    hostname: kafka
    container_name: kafka
    ports:
      # Port for internal Docker network communication
      - "9092:9092"
      # Port for external communication from your host machine (e.g., your Spring app)
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # This listener is for clients inside the Docker network (e.g., other containers)
      # This listener is for clients outside the Docker network (e.g., your Spring Boot app)
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  timescaledb:
    image: timescale/timescaledb:latest-pg16
    hostname: timescaledb
    container_name: timescaledb
    ports:
      - "5432:5432" # Expose the standard PostgreSQL port
    environment:
      - POSTGRES_DB=iot_data
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - timescaledb_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080 # Access adminer to view postgres db
volumes:
  timescaledb_data:

